	DE2_115_SOPC u0 (
		.vid_clk_to_the_alt_vip_itc_0             (<connected-to-vid_clk_to_the_alt_vip_itc_0>),             //         alt_vip_itc_0_clocked_video.vid_clk
		.vid_data_from_the_alt_vip_itc_0          (<connected-to-vid_data_from_the_alt_vip_itc_0>),          //                                    .vid_data
		.underflow_from_the_alt_vip_itc_0         (<connected-to-underflow_from_the_alt_vip_itc_0>),         //                                    .underflow
		.vid_datavalid_from_the_alt_vip_itc_0     (<connected-to-vid_datavalid_from_the_alt_vip_itc_0>),     //                                    .vid_datavalid
		.vid_v_sync_from_the_alt_vip_itc_0        (<connected-to-vid_v_sync_from_the_alt_vip_itc_0>),        //                                    .vid_v_sync
		.vid_h_sync_from_the_alt_vip_itc_0        (<connected-to-vid_h_sync_from_the_alt_vip_itc_0>),        //                                    .vid_h_sync
		.vid_f_from_the_alt_vip_itc_0             (<connected-to-vid_f_from_the_alt_vip_itc_0>),             //                                    .vid_f
		.vid_h_from_the_alt_vip_itc_0             (<connected-to-vid_h_from_the_alt_vip_itc_0>),             //                                    .vid_h
		.vid_v_from_the_alt_vip_itc_0             (<connected-to-vid_v_from_the_alt_vip_itc_0>),             //                                    .vid_v
		.altpll_0_areset_conduit_export           (<connected-to-altpll_0_areset_conduit_export>),           //             altpll_0_areset_conduit.export
		.altpll_0_c1_out                          (<connected-to-altpll_0_c1_out>),                          //                         altpll_0_c1.clk
		.locked_from_the_altpll_0                 (<connected-to-locked_from_the_altpll_0>),                 //             altpll_0_locked_conduit.export
		.phasedone_from_the_altpll_0              (<connected-to-phasedone_from_the_altpll_0>),              //          altpll_0_phasedone_conduit.export
		.altpll_audio_locked_conduit_export       (<connected-to-altpll_audio_locked_conduit_export>),       //         altpll_audio_locked_conduit.export
		.altpll_audio_phasedone_conduit_export    (<connected-to-altpll_audio_phasedone_conduit_export>),    //      altpll_audio_phasedone_conduit.export
		.audio_conduit_end_XCK                    (<connected-to-audio_conduit_end_XCK>),                    //                   audio_conduit_end.XCK
		.audio_conduit_end_ADCDAT                 (<connected-to-audio_conduit_end_ADCDAT>),                 //                                    .ADCDAT
		.audio_conduit_end_ADCLRC                 (<connected-to-audio_conduit_end_ADCLRC>),                 //                                    .ADCLRC
		.audio_conduit_end_DACDAT                 (<connected-to-audio_conduit_end_DACDAT>),                 //                                    .DACDAT
		.audio_conduit_end_DACLRC                 (<connected-to-audio_conduit_end_DACLRC>),                 //                                    .DACLRC
		.audio_conduit_end_BCLK                   (<connected-to-audio_conduit_end_BCLK>),                   //                                    .BCLK
		.clk_50                                   (<connected-to-clk_50>),                                   //                       clk_50_clk_in.clk
		.reset_n                                  (<connected-to-reset_n>),                                  //                 clk_50_clk_in_reset.reset_n
		.dclk_from_the_epcs_flash_controller      (<connected-to-dclk_from_the_epcs_flash_controller>),      //      epcs_flash_controller_external.dclk
		.sce_from_the_epcs_flash_controller       (<connected-to-sce_from_the_epcs_flash_controller>),       //                                    .sce
		.sdo_from_the_epcs_flash_controller       (<connected-to-sdo_from_the_epcs_flash_controller>),       //                                    .sdo
		.data0_to_the_epcs_flash_controller       (<connected-to-data0_to_the_epcs_flash_controller>),       //                                    .data0
		.i2c_opencores_0_export_scl_pad_io        (<connected-to-i2c_opencores_0_export_scl_pad_io>),        //              i2c_opencores_0_export.scl_pad_io
		.i2c_opencores_0_export_sda_pad_io        (<connected-to-i2c_opencores_0_export_sda_pad_io>),        //                                    .sda_pad_io
		.in_port_to_the_key                       (<connected-to-in_port_to_the_key>),                       //             key_external_connection.export
		.LCD_RS_from_the_lcd                      (<connected-to-LCD_RS_from_the_lcd>),                      //                        lcd_external.RS
		.LCD_RW_from_the_lcd                      (<connected-to-LCD_RW_from_the_lcd>),                      //                                    .RW
		.LCD_data_to_and_from_the_lcd             (<connected-to-LCD_data_to_and_from_the_lcd>),             //                                    .data
		.LCD_E_from_the_lcd                       (<connected-to-LCD_E_from_the_lcd>),                       //                                    .E
		.lcd_touch_int_external_connection_export (<connected-to-lcd_touch_int_external_connection_export>), //   lcd_touch_int_external_connection.export
		.out_port_from_the_led                    (<connected-to-out_port_from_the_led>),                    //             led_external_connection.export
		.zs_addr_from_the_sdram                   (<connected-to-zs_addr_from_the_sdram>),                   //                          sdram_wire.addr
		.zs_ba_from_the_sdram                     (<connected-to-zs_ba_from_the_sdram>),                     //                                    .ba
		.zs_cas_n_from_the_sdram                  (<connected-to-zs_cas_n_from_the_sdram>),                  //                                    .cas_n
		.zs_cke_from_the_sdram                    (<connected-to-zs_cke_from_the_sdram>),                    //                                    .cke
		.zs_cs_n_from_the_sdram                   (<connected-to-zs_cs_n_from_the_sdram>),                   //                                    .cs_n
		.zs_dq_to_and_from_the_sdram              (<connected-to-zs_dq_to_and_from_the_sdram>),              //                                    .dq
		.zs_dqm_from_the_sdram                    (<connected-to-zs_dqm_from_the_sdram>),                    //                                    .dqm
		.zs_ras_n_from_the_sdram                  (<connected-to-zs_ras_n_from_the_sdram>),                  //                                    .ras_n
		.zs_we_n_from_the_sdram                   (<connected-to-zs_we_n_from_the_sdram>),                   //                                    .we_n
		.SRAM_DQ_to_and_from_the_sram             (<connected-to-SRAM_DQ_to_and_from_the_sram>),             //                    sram_conduit_end.DQ
		.SRAM_ADDR_from_the_sram                  (<connected-to-SRAM_ADDR_from_the_sram>),                  //                                    .ADDR
		.SRAM_UB_n_from_the_sram                  (<connected-to-SRAM_UB_n_from_the_sram>),                  //                                    .UB_n
		.SRAM_LB_n_from_the_sram                  (<connected-to-SRAM_LB_n_from_the_sram>),                  //                                    .LB_n
		.SRAM_WE_n_from_the_sram                  (<connected-to-SRAM_WE_n_from_the_sram>),                  //                                    .WE_n
		.SRAM_CE_n_from_the_sram                  (<connected-to-SRAM_CE_n_from_the_sram>),                  //                                    .CE_n
		.SRAM_OE_n_from_the_sram                  (<connected-to-SRAM_OE_n_from_the_sram>),                  //                                    .OE_n
		.in_port_to_the_sw                        (<connected-to-in_port_to_the_sw>),                        //              sw_external_connection.export
		.data_to_and_from_the_cfi_flash           (<connected-to-data_to_and_from_the_cfi_flash>),           // tri_state_bridge_flash_bridge_0_out.data_to_and_from_the_cfi_flash
		.address_to_the_cfi_flash                 (<connected-to-address_to_the_cfi_flash>),                 //                                    .address_to_the_cfi_flash
		.write_n_to_the_cfi_flash                 (<connected-to-write_n_to_the_cfi_flash>),                 //                                    .write_n_to_the_cfi_flash
		.select_n_to_the_cfi_flash                (<connected-to-select_n_to_the_cfi_flash>),                //                                    .select_n_to_the_cfi_flash
		.read_n_to_the_cfi_flash                  (<connected-to-read_n_to_the_cfi_flash>),                  //                                    .read_n_to_the_cfi_flash
		.sd_dat_external_connection_export        (<connected-to-sd_dat_external_connection_export>),        //          sd_dat_external_connection.export
		.sd_cmd_external_connection_export        (<connected-to-sd_cmd_external_connection_export>),        //          sd_cmd_external_connection.export
		.sd_clk_external_connection_export        (<connected-to-sd_clk_external_connection_export>),        //          sd_clk_external_connection.export
		.sd_wp_n_external_connection_export       (<connected-to-sd_wp_n_external_connection_export>),       //         sd_wp_n_external_connection.export
		.i2c_scl_external_connection_export       (<connected-to-i2c_scl_external_connection_export>),       //         i2c_scl_external_connection.export
		.i2c_sda_external_connection_export       (<connected-to-i2c_sda_external_connection_export>)        //         i2c_sda_external_connection.export
	);

